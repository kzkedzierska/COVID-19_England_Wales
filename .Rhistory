labs(title = "Discrepencies between the reported numbers",
color = "Source", shape = "Source",
y = "Number of deaths") +
theme(axis.title.x = element_blank(), text = element_text(size = 16))
actual_vs_reported %>%
ggplot(aes(x = Date, y = number_of_deaths, color = source, shape = source)) +
geom_smooth(se = FALSE) +
geom_point(color = "black") +
scale_color_jama() +
guides(color = guide_legend(nrow = 2, byrow = TRUE))+
labs(title = "Discrepencies between the reported numbers",
color = "Source", shape = "Source",
y = "Number of deaths") +
theme(axis.title.x = element_blank(), text = element_text(size = 16))
actual_vs_reported %>%
ggplot(aes(x = Date, y = number_of_deaths, color = source, shape = source)) +
geom_smooth(se = FALSE) +
geom_point(color = "black") +
scale_color_jama() +
guides(color = guide_legend(nrow = 2, byrow = TRUE))+
labs(title = "Discrepencies between the reported numbers",
color = "Source", shape = "Source",
y = "Number of deaths") +
theme(axis.title.x = element_blank(), text = element_text(size = 16))
actual_vs_reported %>%
ggplot(aes(x = Date, y = number_of_deaths, color = source, shape = source)) +
geom_smooth(se = FALSE) +
geom_point(color = "black") +
scale_color_jama() +
guides(color = guide_legend(nrow = 2, byrow = TRUE))+
labs(title = "Discrepancies between the reported numbers",
color = "Source", shape = "Source",
y = "Number of deaths") +
theme(axis.title.x = element_blank(), text = element_text(size = 16))
df_2020_ %>%
filter(value == "respiratory_deaths") %>%
mutate(value2 = gsub("respiratory_deaths", "other_respiratory_deaths", value2),
week = as.numeric(week),
week_ = lubridate::ymd("2020-01-03") + 7 * week)
df_2020_ %>%
filter(value == "respiratory_deaths") %>%
mutate(value2 = gsub("respiratory_deaths", "other_respiratory_deaths", value2),
week = as.numeric(week),
week_ = lubridate::ymd("2020-01-03") + 7 * week) %>%
filter(!is.na(number_of_deaths)) %>%
ggplot(aes(x = week_, y = number_of_deaths, color = value2, shape = value2)) +
geom_point() +
geom_smooth() +
scale_color_uchicago() +
labs(y = "Number of deaths", title = "Weekly respiratory deaths",
color = "Cause of death", shape = "Cause of death") +
theme(axis.title.x = element_blank(), legend.position = "bottom")
actual_vs_reported %>%
ggplot(aes(x = Date, y = number_of_deaths, color = source, shape = source)) +
geom_smooth(se = FALSE) +
geom_point(color = "black") +
scale_color_jama() +
guides(color = guide_legend(nrow = 2, byrow = TRUE))+
labs(title = "Discrepancies between the reported numbers",
color = "Source", shape = "Source",
y = "Number of deaths") +
theme(axis.title.x = element_blank(), text = element_text(size = 16)) +
scale_y_log10()
discrepancies <-
actual_vs_reported %>%
ggplot(aes(x = Date, y = number_of_deaths, color = source, shape = source)) +
geom_smooth(se = FALSE) +
geom_point(color = "black") +
scale_color_jama() +
guides(color = guide_legend(nrow = 2, byrow = TRUE))+
labs(title = "Discrepancies between the reported numbers",
color = "Source", shape = "Source",
y = "Number of deaths") +
theme(axis.title.x = element_blank(), text = element_text(size = 16))
discrepancies + theme(legend.position = "none") \ discrepancies + scale_y_log10()
discrepancies <-
actual_vs_reported %>%
ggplot(aes(x = Date, y = number_of_deaths, color = source, shape = source)) +
geom_smooth(se = FALSE) +
geom_point(color = "black") +
scale_color_jama() +
guides(color = guide_legend(nrow = 2, byrow = TRUE))+
labs(title = "Discrepancies between the reported numbers",
color = "Source", shape = "Source",
y = "Number of deaths") +
theme(axis.title.x = element_blank(), text = element_text(size = 16))
discrepancies + theme(legend.position = "none") \ discrepancies + scale_y_log10()
(discrepancies + theme(legend.position = "none")) \ (discrepancies + scale_y_log10())
plt1 <-
discrepancies +
theme(legend.position = "none")
plt2 <-
discrepancies +
scale_y_log10()
plt1 \ plt2
plt1 / plt2
(discrepancies + theme(legend.position = "none")) / (discrepancies + scale_y_log10())
(discrepancies + theme(legend.position = "none")) /
(discrepancies + scale_y_log10() + labs(title = "log scale"))
(discrepancies + theme(legend.position = "none") + labs(title = "[linear scale]")) /
(discrepancies + scale_y_log10() + labs(title = "[log scale]")) +
plot_annotation(ttile = "Discrepancies between the reported numbers")
both <-
(discrepancies + theme(legend.position = "none") + labs(title = "[linear scale]")) /
(discrepancies + scale_y_log10() + labs(title = "[log scale]"))
both + plot_annotation(ttile = "Discrepancies between the reported numbers")
both + plot_annotation(title =  "Discrepancies between the reported numbers")
discrepancies <-
actual_vs_reported %>%
ggplot(aes(x = Date, y = number_of_deaths, color = source, shape = source)) +
geom_smooth(se = FALSE) +
geom_point(color = "black") +
scale_color_jama() +
guides(color = guide_legend(nrow = 2, byrow = TRUE))+
labs(color = "Source", shape = "Source",
y = "Number of deaths") +
theme(axis.title.x = element_blank(), text = element_text(size = 16))
both <-
(discrepancies + theme(legend.position = "none") + labs(title = "[linear scale]")) /
(discrepancies + scale_y_log10() + labs(title = "[log scale]")) +
plot_annotation(title =  "Discrepancies between the reported numbers")
both <-
(discrepancies + theme(legend.position = "none") + labs(title = "[linear scale]")) /
(discrepancies + scale_y_log10() + labs(title = "[log scale]")) +
plot_annotation(title =  "Discrepancies between the reported numbers")
(discrepancies + theme(legend.position = "none") + labs(title = "[linear scale]")) /
(discrepancies + scale_y_log10() + labs(title = "[log scale]")) +
plot_annotation(title =  "Discrepancies between the reported numbers")
discrepancies <-
actual_vs_reported %>%
ggplot(aes(x = Date, y = number_of_deaths, color = source, shape = source)) +
geom_smooth(se = FALSE) +
geom_point(color = "black") +
scale_color_jama() +
guides(color = guide_legend(nrow = 2, byrow = TRUE))+
labs(color = "Source", shape = "Source",
y = "Number of deaths") +
theme(axis.title.x = element_blank(), text = element_text(size = 16))
discrepancies +
theme(legend.position = "none") +
labs(title = "Discrepancies between the reported numbers")
# (discrepancies + theme(legend.position = "none") + labs(title = "[linear scale]")) /
#   (discrepancies + scale_y_log10() + labs(title = "[log scale]")) +
#   plot_annotation(title =  "Discrepancies between the reported numbers")
discrepancies +
labs(title = "Discrepancies between the reported numbers")
discrepancies <-
actual_vs_reported %>%
ggplot(aes(x = Date, y = number_of_deaths, color = source, shape = source)) +
geom_smooth(se = FALSE) +
geom_point(color = "black") +
scale_color_jama() +
guides(color = guide_legend(nrow = 2, byrow = TRUE))+
labs(color = "Source", shape = "Source",
y = "Number of deaths") +
theme(axis.title.x = element_blank(), text = element_text(size = 16))
discrepancies +
labs(title = "Discrepancies between the reported numbers")
# (discrepancies + theme(legend.position = "none") + labs(title = "[linear scale]")) /
#   (discrepancies + scale_y_log10() + labs(title = "[log scale]")) +
#   plot_annotation(title =  "Discrepancies between the reported numbers")
actual_vs_reported %>%
group_by(source) %>%
arrange(Date)
discrepancies <-
actual_vs_reported %>%
ggplot(aes(x = Date, y = number_of_deaths, color = source, shape = source)) +
geom_smooth(se = FALSE) +
geom_point(color = "black") +
scale_color_jama() +
guides(color = guide_legend(nrow = 3, byrow = TRUE))+
labs(color = "Source", shape = "Source",
y = "Number of deaths") +
theme(axis.title.x = element_blank(), text = element_text(size = 16))
discrepancies +
labs(title = "Discrepancies between the reported numbers")
unique(actual_vs_reported$source)
# (discrepancies + theme(legend.position = "none") + labs(title = "[linear scale]")) /
#   (discrepancies + scale_y_log10() + labs(title = "[log scale]")) +
#   plot_annotation(title =  "Discrepancies between the reported numbers")
show(pal_jama()(2))
# (discrepancies + theme(legend.position = "none") + labs(title = "[linear scale]")) /
#   (discrepancies + scale_y_log10() + labs(title = "[log scale]")) +
#   plot_annotation(title =  "Discrepancies between the reported numbers")
ggsci::
# (discrepancies + theme(legend.position = "none") + labs(title = "[linear scale]")) /
#   (discrepancies + scale_y_log10() + labs(title = "[log scale]")) +
#   plot_annotation(title =  "Discrepancies between the reported numbers")
draw(pal_jama()(2))
hist(discoveries, col = pal_jama()(2))
hist(discoveries, col = pal_jama()(5))
hist(discoveries, col = pal_jco()(5))
hist(discoveries, col = pal_uchicago()(5))
hist(discoveries, col = pal_npg()(5))
hist(discoveries, col = pal_jco()(5))
hist(discoveries, col = pal_nejm()(5))
hist(discoveries, col = pal_nejm()(5)[3:4])
pal_nejm()(5)[3:4])
pal_nejm()(5)[3:4]
pal_nejm()(5)[3:4]
col_scheme <- c("#E18727", "#20854E", "#008B6C", "#009093")
names(col_scheme) <- unique(actual_vs_reported$source)
discrepancies <-
actual_vs_reported %>%
ggplot(aes(x = Date, y = number_of_deaths, color = source, shape = source)) +
geom_smooth(se = FALSE) +
geom_point(color = "black") +
scale_color_manual(values = col_scheme) +
guides(color = guide_legend(nrow = 2, byrow = TRUE))+
labs(color = "Source", shape = "Source",
y = "Number of deaths") +
theme(axis.title.x = element_blank(), text = element_text(size = 16))
col_scheme <- c("#E18727", "#20854E", "#008B6C", "#009093")
names(col_scheme) <- unique(actual_vs_reported$source)
discrepancies <-
actual_vs_reported %>%
ggplot(aes(x = Date, y = number_of_deaths, color = source, shape = source)) +
geom_smooth(se = FALSE) +
geom_point(color = "black") +
scale_color_manual(values = col_scheme) +
guides(color = guide_legend(nrow = 2, byrow = TRUE))+
labs(color = "Source", shape = "Source",
y = "Number of deaths") +
theme(axis.title.x = element_blank(), text = element_text(size = 16))
discrepancies +
labs(title = "Discrepancies between the reported numbers")
col_scheme <- c("#E18727", "#20854E", "#008B6C", "#009093")
names(col_scheme) <- unique(actual_vs_reported$source)
discrepancies <-
actual_vs_reported %>%
ggplot(aes(x = Date, y = number_of_deaths, color = source, shape = source)) +
geom_smooth(se = FALSE) +
geom_point(color = "black") +
scale_color_manual(values = col_scheme) +
guides(color = guide_legend(nrow = 2, byrow = TRUE))+
labs(color = "Source", shape = "Source",
y = "Number of deaths") +
theme(axis.title.x = element_blank(), text = element_text(size = 16))
discrepancies +
labs(title = "Discrepancies between the reported numbers of COVID-19 deaths in England and Wales")
# (discrepancies + theme(legend.position = "none") + labs(title = "[linear scale]")) /
#   (discrepancies + scale_y_log10() + labs(title = "[log scale]")) +
#   plot_annotation(title =  "Discrepancies between the reported numbers")
actual_vs_reported %>%
group_by(source) %>%
arrange(-Date) %>%
mutate(deaths_on_that_day = number_of_deaths - lag(number_of_deaths))
actual_vs_reported %>%
group_by(source) %>%
arrange(Date) %>%
mutate(deaths_on_that_day = number_of_deaths - lag(number_of_deaths))
actual_vs_reported %>%
group_by(source) %>%
arrange(Date) %>%
mutate(deaths_on_that_day = number_of_deaths - lag(number_of_deaths)) %>%
ggplot(aes(x = Date, y = deaths_on_that_day, color = source, shape = source)) +
#geom_smooth(se = FALSE) +
geom_point(color = "black") +
scale_color_manual(values = col_scheme) +
guides(color = guide_legend(nrow = 2, byrow = TRUE))+
labs(color = "Source", shape = "Source",
y = "Number of deaths") +
theme(axis.title.x = element_blank(), text = element_text(size = 16))
actual_vs_reported %>%
group_by(source) %>%
arrange(Date) %>%
mutate(deaths_on_that_day = number_of_deaths - lag(number_of_deaths)) %>%
ggplot(aes(x = Date, y = deaths_on_that_day, color = source, shape = source)) +
geom_smooth(se = FALSE) +
geom_point(color = "black") +
scale_color_manual(values = col_scheme) +
guides(color = guide_legend(nrow = 2, byrow = TRUE))+
labs(color = "Source", shape = "Source",
y = "Number of deaths") +
theme(axis.title.x = element_blank(), text = element_text(size = 16))
actual_vs_reported %>%
group_by(source) %>%
arrange(Date) %>%
mutate(deaths_on_that_day = number_of_deaths - lag(number_of_deaths)) %>%
ggplot(aes(x = Date, y = deaths_on_that_day, color = source, shape = source)) +
geom_smooth(se = FALSE) +
geom_point(color = "black") +
scale_color_manual(values = col_scheme) +
guides(color = guide_legend(nrow = 2, byrow = TRUE))+
labs(color = "Source", shape = "Source",
y = "Number of deaths on the day") +
theme(axis.title.x = element_blank(), text = element_text(size = 16))
df_2020_ %>%
filter(value == "respiratory_deaths") %>%
mutate(value2 = gsub("respiratory_deaths", "other_respiratory_deaths", value2),
week = as.numeric(week),
week_ = lubridate::ymd("2020-01-03") + 7 * week) %>%
filter(!is.na(number_of_deaths)) %>%
ggplot(aes(x = week_, y = number_of_deaths, color = value2, shape = value2)) +
geom_point() +
geom_smooth() +
scale_color_uchicago() +
labs(y = "Number of deaths", title = "Weekly respiratory deaths",
color = "Cause of death", shape = "Cause of death") +
theme(axis.title.x = element_blank(), legend.position = "bottom")
df_2020_ %>%
filter(value == "respiratory_deaths") %>%
mutate(value2 = gsub("respiratory_deaths", "other_respiratory_deaths", value2),
week = as.numeric(week),
week_ = lubridate::ymd("2020-01-03") + 7 * week)
df_2020_ %>%
filter(value == "respiratory_deaths") %>%
mutate(value2 = gsub("respiratory_deaths", "other_respiratory_deaths", value2),
week = as.numeric(week),
week_ = lubridate::ymd("2020-01-03") + 7 * week) %>%
filter(!is.na(number_of_deaths))
df_2020_ %>%
filter(value == "respiratory_deaths") %>%
mutate(value2 = gsub("respiratory_deaths", "other_respiratory_deaths", value2),
week = as.numeric(week),
week_ = lubridate::ymd("2020-01-03") + 7 * week-1) %>%
filter(!is.na(number_of_deaths)) %>%
ggplot(aes(x = week_, y = number_of_deaths, color = value2, shape = value2)) +
geom_point() +
geom_smooth() +
scale_color_uchicago() +
labs(y = "Number of deaths", title = "Weekly respiratory deaths",
color = "Cause of death", shape = "Cause of death") +
theme(axis.title.x = element_blank(), legend.position = "bottom")
df_2020_ %>%
filter(value == "respiratory_deaths") %>%
mutate(value2 = gsub("respiratory_deaths", "other_respiratory_deaths", value2),
week = as.numeric(week),
week_ = lubridate::ymd("2020-01-03") + 7 * week-1) %>%
filter(!is.na(number_of_deaths))
df_2020_ %>%
filter(value == "respiratory_deaths") %>%
mutate(value2 = gsub("respiratory_deaths", "other_respiratory_deaths", value2),
week = as.numeric(week),
week_ = lubridate::ymd("2020-01-03") + 7 * (week-1)) %>%
filter(!is.na(number_of_deaths)) %>%
ggplot(aes(x = week_, y = number_of_deaths, color = value2, shape = value2)) +
geom_point() +
geom_smooth() +
scale_color_uchicago() +
labs(y = "Number of deaths", title = "Weekly respiratory deaths",
color = "Cause of death", shape = "Cause of death") +
theme(axis.title.x = element_blank(), legend.position = "bottom")
df_2019 <-
read_xls("./data/publishedweek522019.xls",
sheet = "Weekly figures 2019", skip = 3)[c(4,5,9),-c(1,2)] %>%
mutate(value = c("total_deaths", "total_deaths_ave5", "respiratory_deaths")) %>%
mutate_at(vars(-value), as.numeric) %>%
pivot_longer(names_to = "week",
values_to = "number_of_deaths", -value) %>%
mutate(year = "2019")
current_2020_spreadsheet <- "./data/publishedweek1320201.xlsx"
sheets_2020 <- readxl::excel_sheets(current_2020_spreadsheet)
df_2020_ <-
read_xlsx(current_2020_spreadsheet,
sheet = sheets[5], skip = 4)[c(4,6,9, 10),-c(1,2)] %>%
mutate(value2 = c("total_deaths", "total_deaths_ave5",
"respiratory_deaths", "covid_deaths"),
value = c("total_deaths", "total_deaths_ave5",
"respiratory_deaths", "respiratory_deaths")) %>%
mutate_at(vars(-value, -value2), as.numeric) %>%
pivot_longer(names_to = "week",
values_to = "number_of_deaths",
-c(value, value2))
df_2020 <-
df_2020_ %>%
select(-value2) %>%
mutate(year = "2020") %>%
filter(!is.na(number_of_deaths))
df_all <- bind_rows(list(df_2019, df_2020)) %>%
mutate(week = as.numeric(week),
week_ = lubridate::ymd("2020-01-03") + 7 * (week-1)) %>%
group_by(value, week, week_, year) %>%
summarise(number_of_deaths = sum(number_of_deaths)) %>%
ungroup()
total <-
df_all %>%
filter(value == "total_deaths") %>%
ggplot(aes(x = week_, y = number_of_deaths, fill = year)) +
geom_bar(stat = "identity", position = "dodge") +
geom_smooth(data = filter(df_all, value == "total_deaths_ave5" & year == "2019"),
color = "grey60") +
labs(y = "Number of deaths",
title = "Weekly total deaths [grey = 5 year average]") +
theme(axis.title.x = element_blank()) +
scale_fill_aaas() +
theme(legend.position = "none")
total
total <-
df_all %>%
filter(value == "total_deaths") %>%
ggplot(aes(x = week_, y = number_of_deaths, fill = year)) +
geom_bar(stat = "identity", position = "dodge") +
geom_smooth(data = filter(df_all, value == "total_deaths_ave5" & year == "2019"),
color = "grey60") +
labs(y = "Number of deaths",
title = "Weekly total deaths [grey = 5 year average]") +
theme(axis.title.x = element_blank()) +
scale_fill_aaas() +
theme(legend.position = "none") +
scale_x_continuous(expand = c(0, 0))
total
total <-
df_all %>%
filter(value == "total_deaths") %>%
ggplot(aes(x = week_, y = number_of_deaths, fill = year)) +
geom_bar(stat = "identity", position = "dodge") +
geom_smooth(data = filter(df_all, value == "total_deaths_ave5" & year == "2019"),
color = "grey60") +
labs(y = "Number of deaths",
title = "Weekly total deaths [grey = 5 year average]") +
theme(axis.title.x = element_blank()) +
scale_fill_aaas() +
theme(legend.position = "none") +
scale_y_continuous(expand = c(0, 0))
total
total <-
df_all %>%
filter(value == "total_deaths") %>%
ggplot(aes(x = week_, y = number_of_deaths, fill = year)) +
geom_bar(stat = "identity", position = "dodge") +
geom_smooth(data = filter(df_all, value == "total_deaths_ave5" & year == "2019"),
color = "grey60") +
labs(y = "Number of deaths",
title = "Weekly total deaths [grey = 5 year average]") +
theme(axis.title.x = element_blank()) +
scale_fill_aaas() +
theme(legend.position = "none") +
scale_y_continuous(expand = c(0, 0)) +
scale_x_continuous(expand = c(0, 0))
total
total <-
df_all %>%
filter(value == "total_deaths") %>%
ggplot(aes(x = week_, y = number_of_deaths, fill = year)) +
geom_bar(stat = "identity", position = "dodge") +
geom_smooth(data = filter(df_all, value == "total_deaths_ave5" & year == "2019"),
color = "grey60") +
labs(y = "Number of deaths",
title = "Weekly total deaths [grey = 5 year average]") +
theme(axis.title.x = element_blank()) +
scale_fill_aaas() +
theme(legend.position = "none") +
scale_y_continuous(expand = c(0, 0))
total
total <-
df_all %>%
filter(value == "total_deaths") %>%
ggplot(aes(x = week_, y = number_of_deaths, fill = year)) +
geom_bar(stat = "identity", position = "dodge") +
geom_smooth(data = filter(df_all, value == "total_deaths_ave5" & year == "2019"),
color = "grey60") +
labs(y = "Number of deaths",
title = "Weekly total deaths [grey = 5 year average]") +
theme(axis.title.x = element_blank()) +
scale_fill_aaas() +
theme(legend.position = "none") +
scale_y_continuous(expand = c(0, 0.1))
total
total <-
df_all %>%
filter(value == "total_deaths") %>%
ggplot(aes(x = week_, y = number_of_deaths, fill = year)) +
geom_bar(stat = "identity", position = "dodge") +
geom_smooth(data = filter(df_all, value == "total_deaths_ave5" & year == "2019"),
color = "grey60") +
labs(y = "Number of deaths",
title = "Weekly total deaths [grey = 5 year average]") +
theme(axis.title.x = element_blank()) +
scale_fill_aaas() +
theme(legend.position = "none")
total
cummulative_respiratory <-
df_all %>%
arrange(week) %>%
group_by(value, year) %>%
mutate(cum = cumsum(number_of_deaths)) %>%
filter(value == "respiratory_deaths") %>%
ggplot(aes(x = week_, y = cum, color = year, shape = year)) +
geom_point() +
geom_smooth() +
scale_color_aaas() +
labs(y = "Number of deaths", title = "Cummulative respiratory deaths") +
theme(axis.title.x = element_blank())
cummulative_respiratory
total / respiratory / cummulative_respiratory + plot_layout(guides = "collect")
df_2020_ %>%
filter(value == "respiratory_deaths") %>%
mutate(value2 = gsub("respiratory_deaths", "other_respiratory_deaths", value2),
week = as.numeric(week),
week_ = lubridate::ymd("2020-01-03") + 7 * (week-1)) %>%
filter(!is.na(number_of_deaths)) %>%
ggplot(aes(x = week_, y = number_of_deaths, color = value2, shape = value2)) +
geom_point() +
geom_smooth() +
scale_color_uchicago() +
labs(y = "Number of deaths", title = "Weekly respiratory deaths",
color = "Cause of death", shape = "Cause of death") +
theme(axis.title.x = element_blank(), legend.position = "bottom")
df_2020_ %>%
filter(value == "respiratory_deaths") %>%
mutate(value2 = gsub("respiratory_deaths", "other_respiratory_deaths", value2),
week = as.numeric(week),
week_ = lubridate::ymd("2020-01-03") + 7 * (week-1)) %>%
filter(!is.na(number_of_deaths)) %>%
ggplot(aes(x = week_, y = number_of_deaths, color = value2, shape = value2)) +
geom_point() +
geom_smooth() +
scale_color_uchicago() +
labs(y = "Number of deaths", title = "Weekly respiratory deaths",
color = "Cause of death", shape = "Cause of death") +
theme(axis.title.x = element_blank(), legend.position = "bottom")
